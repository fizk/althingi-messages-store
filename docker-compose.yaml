version: '3'

services:
  run:
    container_name: local-althingi-messages-store-run
    build:
      args:
        - ENV=development
      context: .
      dockerfile: Dockerfile
    environment:
      - QUEUE_HOST=kafka
      - QUEUE_PORT=9092
      - SOURCE_PATH=http://source:80
      - STORE_PATH=http://store:80
    volumes:
      - ./src:/var/src
      - ./test:/var/test
    command: bash -c "denon run --allow-net --allow-env --unstable /var/src/index.ts"

  test:
    container_name: local-althingi-messages-store-test
    build:
      args:
        - ENV=development
      context: .
      dockerfile: Dockerfile
    environment:
      - QUEUE_HOST=kafka
      - QUEUE_PORT=9092
      - SOURCE_PATH=http://source:80
      - STORE_PATH=http://store:80
    volumes:
      - ./src:/var/src
      - ./test:/var/test
    command: bash -c "deno test --allow-net --allow-env --unstable"

  zookeeper:
    container_name: local-althingi-messages-store-zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    container_name: local-althingi-messages-store-kafka
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "9092"
    environment:
      DOCKER_API_VERSION: 1.22
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  #
  # A web-based UI to monitor Kafka/Zookeeper
  #
  # Handy tool in development to monitor Topics, Messages, etc
  #
  # This service is not in the dependency list of 'run', so it needs
  # to be started separately
  #
  # Mapps to port 8080
  #
  # $ docker compose up -d kafka-ui
  #
  kafka-ui:
    container_name: local-althingi-messages-store-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
        - 8080:8080
    environment:
        - KAFKA_CLUSTERS_0_NAME=local
        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092




  source:
    container_name: local-althingi-messages-store-althingi-source
    image: einarvalur/althingi-source:latest
    labels:
        - althingi_service=source
    restart: on-failure
    environment:
      - DB_HOST=source-db
      - DB_PORT=3306
      - DB_NAME=althingi
      - DB_USER=root
      - DB_PASSWORD=example
      - LOG_PATH=php://stdout
      - BROKER=none
      - BROKER_HOST=kafka:9092
      - QUEUE_FORCED=false
      # - DOCUMENT_SERVER=
      # - DOCUMENT_DEFINITION=
      # - INDEXER_STALL_TIME=
    depends_on:
      - source-db
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "5"

  source-db:
    container_name: local-althingi-messages-store-althingi-source-db
    image: einarvalur/althingi-source-db:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "5"

  store:
    container_name: local-althingi-messages-store-althingi-store
    image: einarvalur/althingi-store:latest
    ports:
      - 9090:80
    environment:
      - STORE_DB_HOST=store-db
      - STORE_DB_USER=root
      - STORE_DB_PASSWORD=example
    depends_on:
      - store-db

  store-db:
    container_name: local-althingi-messages-store-althingi-store-db
    image: mongo:5.0.6-focal
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
