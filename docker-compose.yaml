version: '3'

services:
  run:
    container_name: local-althingi-messages-store-run
    labels:
      - althingi_service=messages-source
    build:
      args:
        - ENV=development
      context: .
      dockerfile: Dockerfile
    environment:
      - QUEUE_CLIENT_ID=store-messanger-consumer
      - QUEUE_HOST=kafka
      - QUEUE_PORT=9092
      - SOURCE_PATH=http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:7070
      - STORE_PATH=http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:8083
    depends_on:
        - zookeeper
        - kafka
    volumes:
      - ./src:/var/src
      - ./test:/var/test
    command: bash -c "./bin/dev.sh"
    # command: bash -c "./bin/start.sh"

  test:
    container_name: local-althingi-messages-store-test
    build:
      args:
        - ENV=development
      context: .
      dockerfile: Dockerfile
    environment:
      - QUEUE_HOST=kafka
      - QUEUE_PORT=9092
      - SOURCE_PATH=http://source:80
      - STORE_PATH=http://store:8083
    volumes:
      - ./src:/var/src
      - ./test:/var/test
    command: bash -c "deno test --allow-net --allow-env --unstable"

  zookeeper:
    container_name: local-althingi-messages-store-zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    container_name: local-althingi-messages-store-kafka
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "9092:9092"
    environment:
      DOCKER_API_VERSION: 1.22
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - kafka-volume:/var/run/docker.sock
    restart: unless-stopped

  #
  # A web-based UI to monitor Kafka/Zookeeper
  #
  # Handy tool in development to monitor Topics, Messages, etc
  #
  # This service is not in the dependency list of 'run', so it needs
  # to be started separately
  #
  # Mapps to port 8080
  #
  # $ docker compose up -d kafka-ui
  #
  kafka-ui:
    container_name: local-althingi-messages-store-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
        - 8080:8080
    environment:
        - KAFKA_CLUSTERS_0_NAME=local
        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
volumes:
    kafka-volume:
